digraph sm2 {
    rankdir=LR;
    node [colorscheme=set14, fontname="Helvetica:bold", shape=circle];

    start [shape=point, fillcolor="black"];
    0. [label="0", shape=doublecircle];
    1. [label="1", shape=doublecircle];
    2. [label="2", shape=doublecircle];

    // Self-arrows are commented out here, since the
    // crucial advantage of these state diagrams as
    // visualizations arises from allowing these to
    // remain implicit.
    
    start -> 1 [label="(0/0,0/0)"];
    1 -> 0. [label="(2+/3,0/0)"];
    1 -> 0. [label="(2-4/6,0/0)"];
    1 -> 0. [label="(2-3/6,2+/3)"];
    1 -> 0. [label="(2-3/6,2-4/6)"];
    //1 -> 1 [label="(1/3,0/0)"]; // self-arrow
    1 -> 2 [label="(0/3,0/0)"];
    1 -> 2 [label="(1/6,0/0)"];
    //2 -> 2 [label="(0/3,0/3)"]; // (cannot escalate from top dose)
    //2 -> 2 [label="(0/3,1/3)"]; // self-arrow
    //2 -> 2 [label="(1/6,1/3)"]; // self-arrow
    2 -> 1 [label="(0/3,2+/3)"];
    2 -> 1 [label="(0/3,2-4/6)"];
    2 -> 2. [label="(1/6,0-1/6)"];
    2 -> 2. [label="(0/3,0-1/6)"];
    1 -> 1. [label="(0-1/6,2-4/6)"];
    1 -> 1. [label="(0-1/6,2+/3)"];
    2 -> 1. [label="(1/6,2-4/6)"];
    2 -> 1. [label="(1/6,2+/3)"];
}

// In the following, I count 4 distinct final tallies leading to Rec=2.
// These are all accounted-for in the diagram above.
// All 10 Rec=1 final tallies are also accounted for in the diagram.
// (But note that the 5 final tallies {1/6}✕{2/3,3/3,2/6,3/6,4/6} are
// reached from both states 1 and 2, and must not be double-counted!)
// Lastly, I also count 15 final tallies leading to Rec=0.

// As a further check, we can readily account for all escalation tallies,
// since escalation 1->2 occurs after either 1 cohort, or 2; in which
// cases the tally must be either (0/3,0/0) or (1/6,0/0) respectively.

// Finally, de-escalation 2->1 occurs after 1 or 2 cohorts.  If after 1,
// then the tally must have been (0/3,2+/3); if after 2, the tally must
// have been (0/3,2-4/6).

/*
%?- d_endtally_rec(2, Q, D).
%@    Q = [0/3,0/6], D = 2
%@ ;  Q = [0/3,1/6], D = 2
%@ ;  Q = [1/6,0/6], D = 2
%@ ;  Q = [1/6,1/6], D = 2 % 4 Rec=2 {0/3,1/6}✕{0/6,1/6}
%@ ;  Q = [0/6,2/3], D = 1
%@ ;  Q = [0/6,3/3], D = 1
%@ ;  Q = [0/6,2/6], D = 1
%@ ;  Q = [0/6,3/6], D = 1
%@ ;  Q = [0/6,4/6], D = 1
%@ ;  Q = [1/6,2/3], D = 1
%@ ;  Q = [1/6,3/3], D = 1
%@ ;  Q = [1/6,2/6], D = 1
%@ ;  Q = [1/6,3/6], D = 1
%@ ;  Q = [1/6,4/6], D = 1 % 10 Rec=1 {0/6,1/6}✕{2/3,3/3,2/6,3/6,4/6}
%@ ;  Q = [2/3,0/0], D = 0
%@ ;  Q = [2/6,0/0], D = 0
%@ ;  Q = [2/6,2/3], D = 0
%@ ;  Q = [2/6,2/6], D = 0
%@ ;  Q = [2/6,3/3], D = 0
%@ ;  Q = [2/6,3/6], D = 0
%@ ;  Q = [2/6,4/6], D = 0
%@ ;  Q = [3/3,0/0], D = 0
%@ ;  Q = [3/6,0/0], D = 0
%@ ;  Q = [3/6,2/3], D = 0
%@ ;  Q = [3/6,2/6], D = 0
%@ ;  Q = [3/6,3/3], D = 0
%@ ;  Q = [3/6,3/6], D = 0
%@ ;  Q = [3/6,4/6], D = 0
%@ ;  Q = [4/6,0/0], D = 0 % 15 Rec=0 final tallies
%@ ;  false.
*/
